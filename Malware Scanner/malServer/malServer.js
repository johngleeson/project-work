
/*
 malServer.js
 Author - John Gleeson

 This program connects to a database, starts a HTTPS server and routes
 traffic to the API in restRouter.js
 */

var express = require('express');
var mysql = require('mysql');
var restRouter = require('./restRouter.js');
var https = require('https');
var fs = require('fs');
var app = express();

connectToDataBase();

/*
  Function to connect to the SQL server using the mysql module.
 */
function connectToDataBase () {

    var pool = mysql.createPool({
        connectionLimit: null,
        host: 'localhost',
        user: 'root',
        password: '',
        database: 'hashdatabase',
        debug: false
    });
    pool.getConnection(function (err, connection) {
        if (err) {
            stopServer(err);
        } else {
            configureExpress(connection);
        }
    });
}

/*
 Function to connect to the SQL server using the mysql module.
 */
function configureExpress (connection) {

    var router = express.Router();
    app.use('/api', router);
    restRouter(router, connection);
    startServer();
}

/*
 Function to start the HTTPS server on port 3000
 */
function startServer () {
    https.createServer({
        key: fs.readFileSync('key.pem'),
        cert: fs.readFileSync('cert.pem')
    }, app).listen(3000);
    console.log("Secure server started on port 3000.")

}

/*
 Function to stop the server
 */
function stopServer (err) {
    console.log("Server Error:\n" + err);
    process.exit(1);
}
